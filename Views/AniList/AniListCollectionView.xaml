<UserControl x:Class="MSCS.Views.AniListCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:models="clr-namespace:MSCS.Models"
             xmlns:vm="clr-namespace:MSCS.ViewModels"
             xmlns:enums="clr-namespace:MSCS.Enums"
             xmlns:conv="clr-namespace:MSCS.Converters"
             Height="Auto" Width="Auto">
    <UserControl.Resources>
        <SolidColorBrush x:Key="Fg" Color="White"/>
        <SolidColorBrush x:Key="MutedBrush" Color="#9AA5B1"/>
        <SolidColorBrush x:Key="SectionBackground" Color="#141B29"/>
        <SolidColorBrush x:Key="CardBackground" Color="#1A2130"/>
        <SolidColorBrush x:Key="CardBorder" Color="#262F42"/>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <conv:AniListStatusCommandParameterConverter x:Key="AniListStatusCommandParameterConverter"/>

        <Style x:Key="OptionalTextStyle" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CardButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource CardBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CardBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MediaCardMenuButton" TargetType="Button">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Margin" Value="0,8,8,0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="#1F2738"/>
            <Setter Property="BorderBrush" Value="#2D364A"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Content" Value="⋯"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="MenuBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="14">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MenuBorder" Property="Background" Value="#313B53"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="MenuBorder" Property="Background" Value="#232C3F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MenuBorder" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <DataTemplate x:Key="MediaCardTemplate" DataType="{x:Type models:AniListMedia}">
            <Grid Width="220" Margin="0,0,12,12">
                <Button Style="{StaticResource CardButton}"
                        Command="{Binding DataContext.OpenSeriesCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding}">
                    <Button.ToolTip>
                        <ToolTip Content="{Binding SiteUrl}"/>
                    </Button.ToolTip>
                    <StackPanel>
                        <Border Height="260"
                                CornerRadius="12,12,0,0"
                                Background="#1F2738"
                                ClipToBounds="True">
                            <Image Source="{Binding CoverImageUrl}"
                                   Stretch="UniformToFill"
                                   SnapsToDevicePixels="True"/>
                        </Border>

                        <StackPanel Margin="12">
                            <TextBlock Text="{Binding DisplayTitle}"
                                       TextWrapping="Wrap"
                                       Foreground="{StaticResource Fg}"
                                       FontWeight="SemiBold"/>

                            <TextBlock Text="{Binding UserStatusDisplay}"
                                       Margin="0,6,0,0"
                                       Foreground="{StaticResource MutedBrush}"
                                       Style="{StaticResource OptionalTextStyle}"/>

                            <TextBlock Text="{Binding UserProgressDisplay, StringFormat=Progress: {0}}"
                                       Margin="0,4,0,0"
                                       Foreground="{StaticResource MutedBrush}"
                                       Style="{StaticResource OptionalTextStyle}"/>

                            <TextBlock Text="{Binding UserScoreDisplay, StringFormat=Score: {0}}"
                                       Margin="0,4,0,0"
                                       Foreground="{StaticResource MutedBrush}"
                                       Style="{StaticResource OptionalTextStyle}"/>

                            <TextBlock Text="{Binding UserUpdatedAtDisplay, StringFormat=Updated: {0}}"
                                       Margin="0,4,0,0"
                                       Foreground="{StaticResource MutedBrush}"
                                       Style="{StaticResource OptionalTextStyle}"/>
                        </StackPanel>
                    </StackPanel>
                </Button>

                <Button Style="{StaticResource MediaCardMenuButton}"
                        Click="OnMenuButtonClick"
                        ContextMenuOpening="OnMenuButtonContextMenuOpening">
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Mark as Currently Reading"
                                      Command="{Binding ViewModel.ChangeStatusCommand}"
                                      CommandParameter="{Binding Media, Converter={StaticResource AniListStatusCommandParameterConverter}, ConverterParameter={x:Static enums:AniListMediaListStatus.Current}}"/>

                            <MenuItem Header="Add to Plan to Read"
                                      Command="{Binding ViewModel.ChangeStatusCommand}"
                                      CommandParameter="{Binding Media, Converter={StaticResource AniListStatusCommandParameterConverter}, ConverterParameter={x:Static enums:AniListMediaListStatus.Planning}}"/>

                            <MenuItem Header="Mark as Completed"
                                      Command="{Binding ViewModel.ChangeStatusCommand}"
                                      CommandParameter="{Binding Media, Converter={StaticResource AniListStatusCommandParameterConverter}, ConverterParameter={x:Static enums:AniListMediaListStatus.Completed}}"/>

                            <MenuItem Header="Mark as Paused"
                                      Command="{Binding ViewModel.ChangeStatusCommand}"
                                      CommandParameter="{Binding Media, Converter={StaticResource AniListStatusCommandParameterConverter}, ConverterParameter={x:Static enums:AniListMediaListStatus.Paused}}"/>

                            <MenuItem Header="Mark as Dropped"
                                      Command="{Binding ViewModel.ChangeStatusCommand}"
                                      CommandParameter="{Binding Media, Converter={StaticResource AniListStatusCommandParameterConverter}, ConverterParameter={x:Static enums:AniListMediaListStatus.Dropped}}"/>

                            <MenuItem Header="Mark as Re-reading"
                                      Command="{Binding ViewModel.ChangeStatusCommand}"
                                      CommandParameter="{Binding Media, Converter={StaticResource AniListStatusCommandParameterConverter}, ConverterParameter={x:Static enums:AniListMediaListStatus.Repeating}}"/>

                            <Separator/>

                            <MenuItem Header="Open tracking editor..."
                                      Command="{Binding ViewModel.EditTrackingCommand}"
                                      CommandParameter="{Binding Media}"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </Grid>
        </DataTemplate>

    </UserControl.Resources>

    <Grid Background="{x:Null}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="24,20,24,0" VerticalAlignment="Center">
            <TextBlock Text="AniList Library"
                       Foreground="{StaticResource Fg}"
                       FontSize="22"
                       FontWeight="SemiBold"/>
            <TextBlock Text="{Binding UserName, StringFormat=  ·  {0}}"
                       Foreground="{StaticResource MutedBrush}"
                       Margin="12,2,0,0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UserName}" Value="">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UserName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Button Content="Refresh"
                    Margin="16,0,0,0"
                    Padding="16,6"
                    Command="{Binding RefreshCommand}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Foreground" Value="{StaticResource Fg}"/>
                        <Setter Property="Background" Value="#2A3347"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Opacity" Value="0.6"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <TextBlock Grid.Row="2"
                   Margin="24,12,24,0"
                   Foreground="{StaticResource MutedBrush}"
                   Text="{Binding StatusMessage}"
                   TextWrapping="Wrap"/>

        <ScrollViewer Grid.Row="3"
                      Margin="24"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <Border Background="{StaticResource SectionBackground}"
                        CornerRadius="14"
                        Padding="16"
                        Margin="0,0,0,16"
                        Visibility="{Binding Statistics.HasData, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <TextBlock Text="Library Snapshot"
                                   Foreground="{StaticResource Fg}"
                                   FontWeight="SemiBold"
                                   FontSize="16"/>
                        <UniformGrid Columns="3" Margin="0,12,0,0" Rows="2">
                            <StackPanel Margin="0,0,12,12">
                                <TextBlock Text="Tracked Series"
                                           Foreground="{StaticResource MutedBrush}"/>
                                <TextBlock Text="{Binding Statistics.TotalSeries}"
                                           Foreground="{StaticResource Fg}"
                                           FontWeight="SemiBold"
                                           FontSize="18"/>
                            </StackPanel>
                            <StackPanel Margin="0,0,12,12">
                                <TextBlock Text="Completed"
                                           Foreground="{StaticResource MutedBrush}"/>
                                <TextBlock Text="{Binding Statistics.CompletedSeries}"
                                           Foreground="{StaticResource Fg}"
                                           FontWeight="SemiBold"
                                           FontSize="18"/>
                            </StackPanel>
                            <StackPanel Margin="0,0,0,12">
                                <TextBlock Text="In Progress"
                                           Foreground="{StaticResource MutedBrush}"/>
                                <TextBlock Text="{Binding Statistics.InProgressSeries}"
                                           Foreground="{StaticResource Fg}"
                                           FontWeight="SemiBold"
                                           FontSize="18"/>
                            </StackPanel>
                            <StackPanel Margin="0,0,12,0">
                                <TextBlock Text="Planned"
                                           Foreground="{StaticResource MutedBrush}"/>
                                <TextBlock Text="{Binding Statistics.PlannedSeries}"
                                           Foreground="{StaticResource Fg}"
                                           FontWeight="SemiBold"
                                           FontSize="18"/>
                            </StackPanel>
                            <StackPanel Margin="0,0,12,0">
                                <TextBlock Text="Chapters Read"
                                           Foreground="{StaticResource MutedBrush}"/>
                                <TextBlock Text="{Binding Statistics.ChaptersRead}"
                                           Foreground="{StaticResource Fg}"
                                           FontWeight="SemiBold"
                                           FontSize="18"/>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Avg. Score"
                                           Foreground="{StaticResource MutedBrush}"/>
                                <TextBlock Text="{Binding Statistics.AverageScoreDisplay}"
                                           Foreground="{StaticResource Fg}"
                                           FontWeight="SemiBold"
                                           FontSize="18"/>
                            </StackPanel>
                        </UniformGrid>
                        <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                            <TextBlock Text="Last update"
                                       Foreground="{StaticResource MutedBrush}"/>
                            <TextBlock Text="{Binding Statistics.LastUpdatedDisplay, StringFormat=  ·  {0}}"
                                       Foreground="{StaticResource MutedBrush}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <ItemsControl ItemsSource="{Binding Sections}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:AniListListSectionViewModel}">
                            <Border Margin="0,0,0,16"
                                    Background="{StaticResource SectionBackground}"
                                    CornerRadius="14"
                                    Padding="16">
                                <Expander Header="{Binding Header}"
                                          IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                                          Foreground="{StaticResource Fg}">
                                    <Expander.Content>
                                        <Grid>
                                            <ItemsControl ItemsSource="{Binding Items}"
                                                          Margin="0,8,0,0"
                                                          ItemTemplate="{StaticResource MediaCardTemplate}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                            <TextBlock Text="No series in this list yet."
                                                       Foreground="{StaticResource MutedBrush}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding HasItems}" Value="False">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Expander.Content>
                                </Expander>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
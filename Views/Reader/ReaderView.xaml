<UserControl x:Class="MSCS.Views.ReaderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:MSCS.ViewModels"
             xmlns:conv="clr-namespace:MSCS.Converters"
             xmlns:enums="clr-namespace:MSCS.Enums"
             Background="{Binding Preferences.ReaderBackgroundBrush, FallbackValue=#0F151F}"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch"
             Focusable="True"
             FocusVisualStyle="{x:Null}"
             Loaded="UserControl_Loaded"
             Unloaded="UserControl_Unloaded"
             PreviewKeyDown="UserControl_PreviewKeyDown">

    <UserControl.Resources>
        <ResourceDictionary>

            <conv:ViewportFractionConverter x:Key="ViewportFraction"/>
            <conv:BooleanOrConverter x:Key="BooleanOr"/>
            <conv:ChapterImageSourceConverter x:Key="ChapterImageSource"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <ItemsPanelTemplate x:Key="VerticalPanelTemplate">
                <VirtualizingStackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>

            <Style x:Key="AccentButton" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource Accent}" />
                <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
                <Setter Property="Padding" Value="14,6" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="6"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentHover}" />                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentHover}" />                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ChapterPreviewButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource SidebarText}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="8">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+TrackingProvider}">
                <Border Background="{DynamicResource SurfaceAlt}"
                        CornerRadius="4"
                        Padding="6,2">
                    <TextBlock Text="{Binding DisplayName}"
                               Foreground="{DynamicResource SidebarText}"
                               FontSize="12"
                               FontWeight="SemiBold"/>
                </Border>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+AniListTrackingProvider}">
                <Border Background="#152B4E"
                        CornerRadius="4"
                        Padding="6,2">
                    <TextBlock Text="AniList"
                               Foreground="#6EC1FF"
                               FontSize="12"
                               FontWeight="SemiBold"/>
                </Border>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+MyAnimeListTrackingProvider}">
                <Border Background="#1F2A44"
                        CornerRadius="4"
                        Padding="6,2">
                    <TextBlock Text="MyAnimeList"
                               Foreground="#8EC5FF"
                               FontSize="12"
                               FontWeight="SemiBold"/>
                </Border>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+KitsuTrackingProvider}">
                <Border Background="#34253B"
                        CornerRadius="4"
                        Padding="6,2">
                    <TextBlock Text="Kitsu"
                               Foreground="#EFA8FF"
                               FontSize="12"
                               FontWeight="SemiBold"/>
                </Border>
            </DataTemplate>


            <Style x:Key="SidebarTabControlStyle" TargetType="TabControl">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                                          Grid.Row="0"
                                          Background="Transparent"
                                          Margin="0,0,0,8"
                                          IsItemsHost="True"/>
                                <Border Grid.Row="1"
                                        Background="Transparent"
                                        BorderThickness="0">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      Margin="0"
                                                      ContentSource="SelectedContent"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SidebarTabItemStyle" TargetType="TabItem">
                <Setter Property="Foreground" Value="#8F9BB4"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0,0,8,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="Border"
                                    Padding="12,6"
                                    CornerRadius="6"
                                    Background="Transparent">
                                <ContentPresenter x:Name="ContentSite"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  ContentSource="Header"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SidebarSegmentToggleStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SidebarIconButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SidebarIconToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="Right"
                    Modifiers="Control"
                    Command="{Binding NextChapterCommand}"/>
        <KeyBinding Key="Left"
                    Modifiers="Control"
                    Command="{Binding PreviousChapterCommand}"/>
        <KeyBinding Key="N"
                    Modifiers="Control"
                    Command="{Binding NextChapterCommand}"/>
        <KeyBinding Key="P"
                    Modifiers="Control"
                    Command="{Binding PreviousChapterCommand}"/>
        <KeyBinding Key="D1"
                    Modifiers="Control"
                    Command="{Binding Preferences.SetZoomPresetCommand}"
                    CommandParameter="0.6"/>
        <KeyBinding Key="D2"
                    Modifiers="Control"
                    Command="{Binding Preferences.SetZoomPresetCommand}"
                    CommandParameter="0.75"/>
        <KeyBinding Key="D3"
                    Modifiers="Control"
                    Command="{Binding Preferences.SetZoomPresetCommand}"
                    CommandParameter="0.9"/>
        <KeyBinding Key="D4"
                    Modifiers="Control"
                    Command="{Binding Preferences.SetZoomPresetCommand}"
                    CommandParameter="1.0"/>
        <KeyBinding Key="D0"
                    Modifiers="Control"
                    Command="{Binding Preferences.ResetZoomCommand}"/>
        <KeyBinding Key="Add"
                    Modifiers="Control"
                    Command="{Binding Preferences.IncreaseZoomCommand}"/>
        <KeyBinding Key="Subtract"
                    Modifiers="Control"
                    Command="{Binding Preferences.DecreaseZoomCommand}"/>
        <KeyBinding Key="OemPlus"
                    Modifiers="Control"
                    Command="{Binding Preferences.IncreaseZoomCommand}"/>
        <KeyBinding Key="OemMinus"
                    Modifiers="Control"
                    Command="{Binding Preferences.DecreaseZoomCommand}"/>
        <KeyBinding Key="D1"
                    Modifiers="Control+Shift"
                    Command="{Binding Preferences.SetScrollPresetCommand}"
                    CommandParameter="{x:Static enums:ReaderScrollPreset.Compact}"/>
        <KeyBinding Key="D2"
                    Modifiers="Control+Shift"
                    Command="{Binding Preferences.SetScrollPresetCommand}"
                    CommandParameter="{x:Static enums:ReaderScrollPreset.Balanced}"/>
        <KeyBinding Key="D3"
                    Modifiers="Control+Shift"
                    Command="{Binding Preferences.SetScrollPresetCommand}"
                    CommandParameter="{x:Static enums:ReaderScrollPreset.Immersive}"/>
        <KeyBinding Key="T"
                    Modifiers="Control"
                    Command="{Binding Preferences.TogglePageTransitionsCommand}"/>
        <KeyBinding Key="W"
                    Modifiers="Control"
                    Command="{Binding Preferences.ToggleAutoWidthCommand}"/>
        <KeyBinding Key="I"
                    Modifiers="Control"
                    Command="{Binding Preferences.ToggleImmersiveModeCommand}"/>
    </UserControl.InputBindings>

    <Grid>
        <ListBox x:Name="ImageList"
                 Background="{Binding Preferences.ReaderSurfaceBrush, FallbackValue=#111727}"
                 BorderThickness="0"
                 Padding="0"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.CanContentScroll="True"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 VirtualizingPanel.IsVirtualizing="True"
                 VirtualizingPanel.VirtualizationMode="Recycling"
                 VirtualizingPanel.CacheLength="1"
                 VirtualizingPanel.ScrollUnit="Pixel"
                 VirtualizingStackPanel.CleanUpVirtualizedItem="Images_CleanUpVirtualizedItem"
                 Loaded="ImageList_Loaded"
                 ItemsSource="{Binding ImageUrls}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="IsHitTestVisible" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Image Stretch="Uniform"
                           Margin="0"
                           SnapsToDevicePixels="True"
                           UseLayoutRounding="True"
                           RenderOptions.BitmapScalingMode="HighQuality"
                           MouseLeftButtonDown="Image_MouseLeftButtonDown"
                           RenderOptions.EdgeMode="Aliased">
                        <Image.Source>
                            <Binding Converter="{StaticResource ChapterImageSource}"/>
                        </Image.Source>
                        <Image.Width>
                            <MultiBinding Converter="{StaticResource ViewportFraction}">
                                <Binding RelativeSource="{RelativeSource AncestorType=ScrollViewer}" Path="ViewportWidth"/>
                                <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="DataContext.Preferences.WidthFactor"/>
                                <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="DataContext.Preferences.MaxPageWidth"/>
                                <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="DataContext.Preferences.AutoAdjustWidth"/>
                            </MultiBinding>
                        </Image.Width>
                    </Image>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Border HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Margin="12"
                Padding="12"
                CornerRadius="8"
                Background="{Binding Preferences.ReaderSurfaceBrush, FallbackValue={StaticResource SurfaceAlt}}"
                Opacity="0.85"
                BorderBrush="{DynamicResource SurfaceBorderSoft}"
                BorderThickness="1">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=IsFullscreenMode}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TotalImages}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.Effect>
                <DropShadowEffect BlurRadius="16" ShadowDepth="0" Opacity="0.3"/>
            </Border.Effect>
            <StackPanel>
                <TextBlock Text="{Binding ChapterTitle}"
                           Foreground="{DynamicResource SidebarText}"
                           FontWeight="SemiBold"
                           TextTrimming="CharacterEllipsis"
                           Margin="0,0,0,6"/>
                <ProgressBar Minimum="0"
                             Maximum="1"
                             Height="6"
                             Margin="0,0,0,8"
                             Value="{Binding ScrollProgress, Mode=OneWay}"/>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <TextBlock Text="{Binding LoadedImages}"
                               Foreground="{DynamicResource SidebarText}"
                               FontWeight="SemiBold"/>
                    <TextBlock Text=" / " Foreground="{DynamicResource SidebarText}"/>
                    <TextBlock Text="{Binding TotalImages}"
                               Foreground="{DynamicResource SidebarText}"/>
                    <TextBlock Text="  •  " Foreground="{DynamicResource FgSubtle}"/>
                    <TextBlock Text="{Binding ScrollProgress, StringFormat={}{0:P0}}"
                               Foreground="{DynamicResource SidebarText}"/>
                </StackPanel>
            </StackPanel>
        </Border>
        <Border HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Margin="0,0,0,40"
                Padding="20,16"
                Panel.ZIndex="6"
                CornerRadius="12"
                Background="{Binding Preferences.ReaderSurfaceBrush, FallbackValue={StaticResource SurfaceAlt}}"
                Opacity="0.92"
                BorderBrush="{DynamicResource SurfaceBorderSoft}"
                BorderThickness="1">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChapterTransitionPreviewVisible}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.Effect>
                <DropShadowEffect BlurRadius="18" ShadowDepth="0" Opacity="0.35"/>
            </Border.Effect>
            <StackPanel Width="360" TextBlock.TextAlignment="Center" TextElement.Foreground="{DynamicResource SidebarText}">
                <Button Style="{StaticResource ChapterPreviewButton}"
                        Command="{Binding PreviousChapterCommand}"
                        Margin="0,0,0,12"
                        Padding="12,8">
                    <StackPanel>
                        <TextBlock Text="Previous:"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource FgSubtle}"/>
                        <TextBlock Text="{Binding PreviousChapterDisplay, TargetNullValue=—}"
                                   TextTrimming="CharacterEllipsis"
                                   FontSize="16"
                                   Margin="0,4,0,0"/>
                    </StackPanel>
                </Button>
                <StackPanel Margin="0,0,0,12">
                    <TextBlock Text="Current:"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource FgSubtle}"/>
                    <TextBlock Text="{Binding CurrentChapterDisplay, TargetNullValue=—}"
                               TextTrimming="CharacterEllipsis"
                               FontSize="18"
                               FontWeight="SemiBold"
                               Margin="0,4,0,0"/>
                </StackPanel>
                <Button Style="{StaticResource ChapterPreviewButton}"
                        Command="{Binding NextChapterCommand}"
                        Padding="12,8">
                    <StackPanel>
                        <TextBlock Text="Next:"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource FgSubtle}"/>
                        <TextBlock Text="{Binding NextChapterDisplay, TargetNullValue=—}"
                                   TextTrimming="CharacterEllipsis"
                                   FontSize="16"
                                   Margin="0,4,0,0"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Border>
        <Grid x:Name="SidebarHost"
              HorizontalAlignment="Left"
              VerticalAlignment="Stretch"
              Margin="4,0,0,0"
              Panel.ZIndex="10"
              Background="Transparent">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=IsFullscreenMode}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>


            <StackPanel Grid.Column="0"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left">
                <Border Background="{DynamicResource SurfaceAlt}"
                        BorderBrush="{DynamicResource SurfaceBorderSoft}"
                        BorderThickness="1"
                        CornerRadius="10"
                        Padding="6"
                        Margin="4,4,0,4"
                        SnapsToDevicePixels="True">
                    <StackPanel>
                        <Button Style="{StaticResource SidebarIconButtonStyle}"
                                Command="{Binding GoBackCommand}"
                                ToolTip="Back"
                                Margin="0,0,0,8">
                            <TextBlock Text="&#xE72B;" FontSize="16"/>
                        </Button>

                        <ToggleButton x:Name="SidebarToggleButton"
                                      Style="{StaticResource SidebarIconToggleButtonStyle}"
                                      Margin="0,0,0,8">
                            <ToggleButton.ToolTip>
                                <ToolTip>
                                    <ToolTip.Style>
                                        <Style TargetType="ToolTip">
                                            <Setter Property="Content" Value="Pin sidebar"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PlacementTarget.IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                                                    <Setter Property="Content" Value="Unpin sidebar"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToolTip.Style>
                                </ToolTip>
                            </ToggleButton.ToolTip>
                            <TextBlock FontSize="16">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="&#xE718;"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                <Setter Property="Text" Value="&#xE77A;"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </ToggleButton>

                        <Button x:Name="FullscreenButton"
                                Style="{StaticResource SidebarIconButtonStyle}"
                                ToolTip="Enter fullscreen"
                                Click="FullscreenButton_Click">
                            <TextBlock x:Name="FullscreenButtonIcon"
                                       FontSize="16"
                                       Text="&#xE740;"/>
                        </Button>
                    </StackPanel>
                </Border>
            </StackPanel>


            <Border x:Name="ChapterSidebar"
                    Grid.Column="1"
                    Margin="8,4,0,4"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch"
                    Background="{DynamicResource SidebarBackground}"
                    BorderBrush="{DynamicResource SurfaceBorder}"
                    BorderThickness="1"
                    CornerRadius="10"
                    Padding="10"
                    Width="300"
                    SnapsToDevicePixels="True">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource BooleanOr}">
                                        <Binding ElementName="SidebarToggleButton" Path="IsChecked" TargetNullValue="False" FallbackValue="False"/>
                                        <Binding ElementName="SidebarToggleButton" Path="IsMouseOver"/>                                        <Binding RelativeSource="{RelativeSource Self}" Path="IsMouseOver"/>
                                        <Binding ElementName="SidebarHost" Path="IsMouseOver"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>


                    <!-- Reader preferences -->

                    <TabControl Grid.Row="1"
                                Style="{StaticResource SidebarTabControlStyle}"
                                ItemContainerStyle="{StaticResource SidebarTabItemStyle}">
                        <TabItem Header="Reader">
                            <ScrollViewer VerticalScrollBarVisibility="Auto"
                                          HorizontalScrollBarVisibility="Disabled">
                                <StackPanel>
                                    <Border Background="{DynamicResource SurfaceAlt}"
                                            BorderBrush="{DynamicResource SurfaceBorderSoft}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Padding="10">
                                        <StackPanel>
                                            <TextBlock Text="Zoom"
                                                       Foreground="{DynamicResource FgMuted}"
                                                       FontSize="12"
                                                       FontWeight="SemiBold"/>
                                            <StackPanel Orientation="Horizontal"
                                                        Margin="0,6,0,0"
                                                        VerticalAlignment="Center">
                                                <Slider Width="160"
                                                        Minimum="0.3"
                                                        Maximum="1.0"
                                                        TickFrequency="0.05"
                                                        IsSnapToTickEnabled="True"
                                                        Value="{Binding Preferences.WidthFactor, Mode=TwoWay}"
                                                        ToolTip="Adjust the relative page width"
                                                        Margin="0,0,8,0"/>
                                                <TextBlock Text="{Binding Preferences.ZoomPercent, StringFormat={}{0:F0}%}"
                                                           Foreground="{DynamicResource SidebarText}"
                                                           FontWeight="SemiBold"/>
                                            </StackPanel>
                                            <UniformGrid Columns="4" Margin="0,8,0,0">
                                                <Button Content="60%"
                                                        Margin="0,0,6,0"
                                                        Command="{Binding Preferences.SetZoomPresetCommand}"
                                                        CommandParameter="0.6"/>
                                                <Button Content="75%"
                                                        Margin="0,0,6,0"
                                                        Command="{Binding Preferences.SetZoomPresetCommand}"
                                                        CommandParameter="0.75"/>
                                                <Button Content="90%"
                                                        Margin="0,0,6,0"
                                                        Command="{Binding Preferences.SetZoomPresetCommand}"
                                                        CommandParameter="0.9"/>
                                                <Button Content="100%"
                                                        Command="{Binding Preferences.SetZoomPresetCommand}"
                                                        CommandParameter="1.0"/>
                                            </UniformGrid>
                                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                                <Button Content="-"
                                                        Width="32"
                                                        Height="28"
                                                        Margin="0,0,6,0"
                                                        Command="{Binding Preferences.DecreaseZoomCommand}"
                                                        ToolTip="Zoom out"/>
                                                <Button Content="Reset"
                                                        Height="28"
                                                        Margin="0,0,6,0"
                                                        Command="{Binding Preferences.ResetZoomCommand}"
                                                        ToolTip="Reset zoom"/>
                                                <Button Content="+"
                                                        Width="32"
                                                        Height="28"
                                                        Command="{Binding Preferences.IncreaseZoomCommand}"
                                                        ToolTip="Zoom in"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>

                    <!-- Manga info + tracking -->

                                    <Border Background="{DynamicResource SurfaceAlt}"
                                            BorderBrush="{DynamicResource SurfaceBorderSoft}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Padding="10"
                                            Margin="0,8,0,0">
                                        <StackPanel>
                                            <TextBlock Text="Layout"
                                                       Foreground="{DynamicResource FgMuted}"
                                                       FontSize="12"
                                                       FontWeight="SemiBold"/>
                                            <UniformGrid Columns="3" Margin="0,6,0,0">
                                                <ToggleButton Content="Compact"
                                                              Margin="0,0,8,0"
                                                              Command="{Binding Preferences.SetScrollPresetCommand}"
                                                              CommandParameter="{x:Static enums:ReaderScrollPreset.Compact}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource SidebarSegmentToggleStyle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Preferences.ScrollPreset}"
                                                                             Value="{x:Static enums:ReaderScrollPreset.Compact}">
                                                                    <Setter Property="IsChecked" Value="True"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ToggleButton Content="Balanced"
                                                              Margin="0,0,8,0"
                                                              Command="{Binding Preferences.SetScrollPresetCommand}"
                                                              CommandParameter="{x:Static enums:ReaderScrollPreset.Balanced}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource SidebarSegmentToggleStyle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Preferences.ScrollPreset}"
                                                                             Value="{x:Static enums:ReaderScrollPreset.Balanced}">
                                                                    <Setter Property="IsChecked" Value="True"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ToggleButton Content="Immersive"
                                                              Command="{Binding Preferences.SetScrollPresetCommand}"
                                                              CommandParameter="{x:Static enums:ReaderScrollPreset.Immersive}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource SidebarSegmentToggleStyle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Preferences.ScrollPreset}"
                                                                             Value="{x:Static enums:ReaderScrollPreset.Immersive}">
                                                                    <Setter Property="IsChecked" Value="True"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                            </UniformGrid>
                                            <CheckBox Content="Two-page layout"
                                                      Margin="0,10,0,0"
                                                      Foreground="{DynamicResource SidebarText}"
                                                      FontWeight="SemiBold"
                                                      IsChecked="{Binding Preferences.UseTwoPageLayout, Mode=TwoWay}"/>
                                            <CheckBox Content="Auto panel width"
                                                      Margin="0,6,0,0"
                                                      Foreground="{DynamicResource SidebarText}"
                                                      FontWeight="SemiBold"
                                                      IsChecked="{Binding Preferences.AutoAdjustWidth, Mode=TwoWay}"/>
                                            <CheckBox Content="Page transitions"
                                                      Margin="0,4,0,0"
                                                      Foreground="{DynamicResource SidebarText}"
                                                      FontWeight="SemiBold"
                                                      IsChecked="{Binding Preferences.EnablePageTransitions, Mode=TwoWay}"/>
                                            <ToggleButton Content="Immersive scroll"
                                                          Margin="0,10,0,0"
                                                          Style="{StaticResource SidebarSegmentToggleStyle}"
                                                          IsChecked="{Binding Preferences.IsImmersiveMode, Mode=TwoWay}"/>
                                        </StackPanel>
                                    </Border>

                    <!-- Chapter list -->

                                    <Border Background="{DynamicResource SurfaceAlt}"
                                            BorderBrush="{DynamicResource SurfaceBorderSoft}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Padding="10"
                                            Margin="0,8,0,0">
                                        <StackPanel>
                                            <TextBlock Text="Theme"
                                                       Foreground="{DynamicResource FgMuted}"
                                                       FontSize="12"
                                                       FontWeight="SemiBold"/>
                                            <ComboBox SelectedValue="{Binding Preferences.Theme}"
                                                      SelectedValuePath="Tag"
                                                      Margin="0,6,0,0"
                                                      ToolTip="Change the reader color palette">
                                                <ComboBoxItem Content="Midnight" Tag="{x:Static enums:ReaderTheme.Midnight}"/>
                                                <ComboBoxItem Content="Pure black" Tag="{x:Static enums:ReaderTheme.PureBlack}"/>
                                                <ComboBoxItem Content="Sepia" Tag="{x:Static enums:ReaderTheme.Sepia}"/>
                                                <ComboBoxItem Content="High contrast" Tag="{x:Static enums:ReaderTheme.HighContrast}"/>
                                            </ComboBox>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Series">
                            <ScrollViewer VerticalScrollBarVisibility="Auto"
                                          HorizontalScrollBarVisibility="Disabled">
                                <Border Background="{DynamicResource SurfaceAlt}"
                                        BorderBrush="{DynamicResource SurfaceBorderSoft}"
                                        BorderThickness="1"
                                        CornerRadius="8"
                                        Padding="10">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Vertical" Margin="0,0,12,0">
                                            <TextBlock Text="{Binding MangaTitle}"
                                                      Foreground="{DynamicResource SidebarText}"
                                                       FontWeight="SemiBold"
                                                       TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Text="{Binding ChapterTitle}"
                                                       Foreground="{DynamicResource FgMuted}"
                                                       FontSize="12"
                                                       TextTrimming="CharacterEllipsis"/>
                                            <StackPanel Orientation="Horizontal"
                                                        Margin="0,8,0,0"
                                                        VerticalAlignment="Center"
                                                        Visibility="{Binding HasTrackingProviders, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ContentControl Content="{Binding ActiveTrackingProvider}"/>
                                                <ComboBox ItemsSource="{Binding TrackingProviders}"
                                                          SelectedItem="{Binding ActiveTrackingProvider}"
                                                          DisplayMemberPath="DisplayName"
                                                          Width="150"
                                                          Margin="8,0,0,0">
                                                    <ComboBox.Style>
                                                        <Style TargetType="ComboBox">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding HasMultipleTrackingProviders}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ComboBox.Style>
                                                </ComboBox>
                                                <TextBlock Text="{Binding ActiveTrackerName}"
                                                           Margin="8,0,0,0"
                                                       Foreground="{DynamicResource FgMuted}"
                                                           FontSize="12"
                                                           VerticalAlignment="Center">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding HasMultipleTrackingProviders}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical"
                                                        Margin="0,8,0,0"
                                                        Visibility="{Binding IsTracked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <TextBlock Text="{Binding TrackingStatusDisplay}"
                                                       Foreground="{DynamicResource FgMuted}"
                                                           FontSize="12"/>
                                                <TextBlock Text="{Binding TrackingProgressDisplay}"
                                                           Foreground="{DynamicResource FgMuted}"
                                                           FontSize="12"/>
                                                <TextBlock Text="{Binding TrackingScoreDisplay}"
                                                           Foreground="{DynamicResource FgMuted}"
                                                           FontSize="12"/>
                                                <TextBlock Text="{Binding TrackingUpdatedDisplay}"
                                                           Foreground="{DynamicResource FgSubtle}"
                                                           FontSize="11"/>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Grid.Column="1"
                                                    Orientation="Vertical"
                                                    HorizontalAlignment="Right"
                                                    Visibility="{Binding HasTrackingProviders, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Button Content="{Binding TrackButtonText}"
                                                    Style="{StaticResource AccentButton}"
                                                    Command="{Binding TrackCommand}"
                                                    ToolTip="{Binding ActiveTrackerName, StringFormat=Manage {0} tracking, TargetNullValue=Manage tracking}"/>
                                            <Button Content="{Binding OpenTrackerButtonText}"
                                                    Margin="0,6,0,0"
                                                    Command="{Binding OpenInBrowserCommand}"
                                                    Visibility="{Binding IsTracked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    ToolTip="{Binding ActiveTrackerName, StringFormat=Open this series on {0}, TargetNullValue=Open the tracked series}"/>
                                            <Button Content="{Binding RemoveTrackerButtonText}"
                                                    Margin="0,6,0,0"
                                                    Command="{Binding RemoveTrackingCommand}"
                                                    Visibility="{Binding IsTracked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    ToolTip="{Binding ActiveTrackerName, StringFormat=Remove {0} tracking, TargetNullValue=Remove tracking}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Chapters">
                            <Grid>
                                <Border Background="{DynamicResource SurfaceAlt}"
                                        BorderBrush="{DynamicResource SurfaceBorderSoft}"
                                        BorderThickness="1"
                                        CornerRadius="8"
                                        Padding="2"
                                        VerticalAlignment="Stretch">
                                    <ListBox ItemsSource="{Binding Chapters}"
                                             SelectedItem="{Binding SelectedChapter, Mode=TwoWay}"
                                             BorderThickness="0"
                                             Background="Transparent"
                                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                                             VirtualizingStackPanel.IsVirtualizing="True"
                                             VirtualizingStackPanel.VirtualizationMode="Recycling">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                                                <Setter Property="Padding" Value="8,6"/>
                                                <Setter Property="Margin" Value="0,2"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ListBoxItem">
                                                            <Border x:Name="ItemBorder"
                                                                    Background="Transparent"
                                                                    CornerRadius="4">
                                                                <ContentPresenter VerticalAlignment="Center" Margin="4,0"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource ControlHover}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource ControlPressed}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Title}"
                                                           Foreground="{DynamicResource SidebarText}"
                                                           FontWeight="SemiBold"
                                                           TextTrimming="CharacterEllipsis"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:MSCS.ViewModels"
                    xmlns:conv="clr-namespace:MSCS.Converters">
    <conv:ViewportFractionConverter x:Key="ViewportFraction"/>
    <conv:BooleanOrConverter x:Key="BooleanOr"/>
    <conv:ChapterImageSourceConverter x:Key="ChapterImageSource"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <ItemsPanelTemplate x:Key="VerticalPanelTemplate">
        <VirtualizingStackPanel Orientation="Vertical"/>
    </ItemsPanelTemplate>

    <Style x:Key="AccentButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="Padding" Value="14,6" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChapterPreviewButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SidebarText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+TrackingProvider}">
        <Border Background="{DynamicResource SurfaceAlt}"
                CornerRadius="4"
                Padding="6,2">
            <TextBlock Text="{Binding DisplayName}"
                       Foreground="{DynamicResource SidebarText}"
                       FontSize="12"
                       FontWeight="SemiBold"/>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+AniListTrackingProvider}">
        <Border Background="#152B4E"
                CornerRadius="4"
                Padding="6,2">
            <TextBlock Text="AniList"
                       Foreground="#6EC1FF"
                       FontSize="12"
                       FontWeight="SemiBold"/>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+MyAnimeListTrackingProvider}">
        <Border Background="#1F2A44"
                CornerRadius="4"
                Padding="6,2">
            <TextBlock Text="MyAnimeList"
                       Foreground="#8EC5FF"
                       FontSize="12"
                       FontWeight="SemiBold"/>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ReaderTrackingCoordinator+KitsuTrackingProvider}">
        <Border Background="#34253B"
                CornerRadius="4"
                Padding="6,2">
            <TextBlock Text="Kitsu"
                       Foreground="#EFA8FF"
                       FontSize="12"
                       FontWeight="SemiBold"/>
        </Border>
    </DataTemplate>

    <Style x:Key="SidebarTabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0"
                                  Background="Transparent"
                                  Margin="0,0,0,8"
                                  IsItemsHost="True"/>
                        <Border Grid.Row="1"
                                Background="Transparent"
                                BorderThickness="0">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="0"
                                              ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidebarTabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="#8F9BB4"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Border"
                            Padding="12,6"
                            CornerRadius="6"
                            Background="Transparent">
                        <ContentPresenter x:Name="ContentSite"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidebarSegmentToggleStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidebarIconButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidebarIconToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
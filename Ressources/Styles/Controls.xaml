<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Navigation button styles -->
    <Style x:Key="NavButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SidebarText}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <!-- Apply Padding from the Style -->
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SurfaceAlt}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Accent}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AccentForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HamburgerStyle" TargetType="ToggleButton">
        <Setter Property="Content" Value="☰"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!-- Surface cards -->
    <Style x:Key="CardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceLow}"/>
        <Setter Property="CornerRadius" Value="16"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.12"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SurfaceSectionStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="8" ShadowDepth="0" Opacity="0.08"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentForeground}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="18,0"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover: small pop -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource AccentHover}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.03" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.03" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Pressed: center-in scale using storyboard (no Setters on ScaleTransform) -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource AccentPressed}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="0.97" Duration="0:0:0.06"/>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="0.97" Duration="0:0:0.06"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1" Duration="0:0:0.10"/>
                                        <DoubleAnimation Storyboard.TargetName="Scale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1" Duration="0:0:0.10"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InputBaseStyle" TargetType="Control">
        <Setter Property="Height" Value="38"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="12,0"/>
        <Setter Property="Foreground" Value="{DynamicResource Fg}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="InputTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource InputBaseStyle}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="InputComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource InputBaseStyle}">
        <Setter Property="IsEditable" Value="False"/>
    </Style>

    <!-- Icon button (MDL2) -->
    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource Fg}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bg" Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource ControlPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bg" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
